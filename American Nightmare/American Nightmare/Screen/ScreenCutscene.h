#ifndef SCREENCUTSCENE_H
#define SCREENCUTSCENE_H

#include "Screen.h"
#include <SFML\Window\Keyboard.hpp>
#include <SFML\Config.hpp>
#include <SFML\Graphics.hpp>
//#include <sfeMovie\Movie.hpp>
#include <iostream>
#include <algorithm>

#define CLEAR_COLOR glm::vec4(0.1f, 0.25, 0.1, 1)

class ScreenCutscene : public Screen
{
public:
	ScreenCutscene();
	ScreenCutscene(const ScreenCutscene& other);
	~ScreenCutscene();

	////////////////////////////////////////////////////////////
	// \brief Initializes every object
	////////////////////////////////////////////////////////////
	bool Start(glm::vec2 screenSize, glm::vec2 screenPosition, SoundManager* soundManager);

	////////////////////////////////////////////////////////////
	// \brief Deletes everything active on screen
	////////////////////////////////////////////////////////////
	void Stop();

	////////////////////////////////////////////////////////////
	// \brief Trying to load and start a cutscene file 
	////////////////////////////////////////////////////////////
	bool StartCutscene(std::string movieName);

	////////////////////////////////////////////////////////////
	// \brief Skipping cutscene 
	////////////////////////////////////////////////////////////
	void SkipCutscene();

	////////////////////////////////////////////////////////////
	// \brief Initializing starting variables
	////////////////////////////////////////////////////////////
	void SetStartVariables();

	////////////////////////////////////////////////////////////
	// \brief Checks if cutscene is getting skipped or finished
	////////////////////////////////////////////////////////////
	void Update(GLint deltaT);

	////////////////////////////////////////////////////////////
	// \brief Drawing cutscene on screen
	////////////////////////////////////////////////////////////
	void Draw();

private:
	//sfe::Movie movie;
	sf::Image frame;
	GLuint texture;
	Model* model;
};

#endif //!SCREENCUTSCENE